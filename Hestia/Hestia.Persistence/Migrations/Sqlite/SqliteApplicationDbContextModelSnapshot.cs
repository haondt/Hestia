// <auto-generated />
using Hestia.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hestia.Persistence.Migrations.Sqlite
{
    [DbContext(typeof(SqliteApplicationDbContext))]
    partial class SqliteApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Hestia.Persistence.Models.FoodLogDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DateString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MealPlanId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DateString")
                        .IsUnique();

                    b.HasIndex("MealPlanId");

                    b.ToTable("FoodLogs");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.FoodLogItemDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoodLogSectionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FoodLogSectionId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("FoodLogItemDataModel");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.FoodLogSectionDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoodLogId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FoodLogId");

                    b.ToTable("FoodLogSectionDataModel");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.HestiaStateDataModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasSeededUnitConversions")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NextMealPlanNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("HestiaStates");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.IngredientDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("AlternateServingSizeQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlternateServingSizeUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Calories")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CarbGrams")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("FatGrams")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PackageCostDollars")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PackageSizeQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("PackageSizeUnit")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ProteinGrams")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ServingSizeQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServingSizeUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vendor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.MealPlanDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("LastModified")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MealPlans");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.MealPlanItemDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MealSectionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("MealSectionId");

                    b.HasIndex("RecipeId");

                    b.ToTable("MealPlanItemDataModel");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.MealPlanSectionDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MealPlanId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MealPlanId");

                    b.ToTable("MealPlanSectionDataModel");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.RecipeDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("CookTimeQuantity")
                        .HasColumnType("REAL");

                    b.Property<string>("CookTimeUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Instructions")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("NumberOfServings")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PrepTimeQuantity")
                        .HasColumnType("REAL");

                    b.Property<string>("PrepTimeUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("YieldQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("YieldUnit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.RecipeIngredientDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.UnitConversionDataModel", b =>
                {
                    b.Property<string>("NormalizedFromUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedToUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("FromUnit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Multiplier")
                        .HasColumnType("TEXT");

                    b.Property<string>("ToUnit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NormalizedFromUnit", "NormalizedToUnit");

                    b.ToTable("UnitConversions");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.FoodLogDataModel", b =>
                {
                    b.HasOne("Hestia.Persistence.Models.MealPlanDataModel", "MealPlan")
                        .WithMany("FoodLogs")
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("MealPlan");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.FoodLogItemDataModel", b =>
                {
                    b.HasOne("Hestia.Persistence.Models.FoodLogSectionDataModel", "FoodLogSection")
                        .WithMany("Items")
                        .HasForeignKey("FoodLogSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hestia.Persistence.Models.IngredientDataModel", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId");

                    b.HasOne("Hestia.Persistence.Models.RecipeDataModel", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId");

                    b.Navigation("FoodLogSection");

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.FoodLogSectionDataModel", b =>
                {
                    b.HasOne("Hestia.Persistence.Models.FoodLogDataModel", "FoodLog")
                        .WithMany("Sections")
                        .HasForeignKey("FoodLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodLog");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.MealPlanItemDataModel", b =>
                {
                    b.HasOne("Hestia.Persistence.Models.IngredientDataModel", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId");

                    b.HasOne("Hestia.Persistence.Models.MealPlanSectionDataModel", "MealSection")
                        .WithMany("Items")
                        .HasForeignKey("MealSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hestia.Persistence.Models.RecipeDataModel", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId");

                    b.Navigation("Ingredient");

                    b.Navigation("MealSection");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.MealPlanSectionDataModel", b =>
                {
                    b.HasOne("Hestia.Persistence.Models.MealPlanDataModel", "MealPlan")
                        .WithMany("Sections")
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MealPlan");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.RecipeIngredientDataModel", b =>
                {
                    b.HasOne("Hestia.Persistence.Models.IngredientDataModel", "Ingredient")
                        .WithMany("Recipes")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Hestia.Persistence.Models.RecipeDataModel", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.FoodLogDataModel", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.FoodLogSectionDataModel", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.IngredientDataModel", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.MealPlanDataModel", b =>
                {
                    b.Navigation("FoodLogs");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.MealPlanSectionDataModel", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.RecipeDataModel", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
