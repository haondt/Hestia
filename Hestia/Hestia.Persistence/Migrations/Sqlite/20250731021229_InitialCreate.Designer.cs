// <auto-generated />
using Hestia.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hestia.Persistence.Migrations.Sqlite
{
    [DbContext(typeof(SqliteApplicationDbContext))]
    [Migration("20250731021229_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Hestia.Persistence.Models.HestiaStateDataModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasSeededUnitConversions")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("HestiaStates");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.IngredientDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("AlternateServingSizeQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlternateServingSizeUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Calories")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CarbGrams")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("FatGrams")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PackageCostDollars")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PackageSizeQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("PackageSizeUnit")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ProteinGrams")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ServingSizeQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServingSizeUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vendor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Hestia.Persistence.Models.UnitConversionDataModel", b =>
                {
                    b.Property<string>("NormalizedFromUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedToUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("FromUnit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Multiplier")
                        .HasColumnType("TEXT");

                    b.Property<string>("ToUnit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NormalizedFromUnit", "NormalizedToUnit");

                    b.ToTable("UnitConversions");
                });
#pragma warning restore 612, 618
        }
    }
}
