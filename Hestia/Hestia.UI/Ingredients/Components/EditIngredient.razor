@using Hestia.Domain.Models

@attribute [RenderPage]
<div _="on load send OnNavigate(value:'NoNavigation') to #navbar then remove me"></div>

@code {
    [Parameter]
    public Optional<IngredientModel> Ingredient { get; set; }

    [Parameter]
    public Optional<int> IngredientId { get; set; }

    private string _target = default!;

    protected override void OnInitialized()
    {
        _target = IngredientId.As(id => $"/ingredients/edit/{id}").Or("/ingredients/new");
        base.OnInitialized();
    }

}

<div class="content-container mt-5">
    <div class="page-header">
        <p>@Ingredient.As(_ => "Edit").Or("New") ingredient</p>
    </div>
    <form id="edit-ingredient-form" class="control" >

        <div class="field is-horizontal">
            <div class="field-label is-normal">
                <label class="label">Name</label>
            </div>
            <div class="field-body">
                <div class="field">
                    <input class="input" name="@nameof(IngredientModel.Name)" type="text" placeholder="3.25% Homogenized Milk" value="@Ingredient.As(q => q.Name).Unwrap()" required/>
                </div>
            </div>
        </div>

        <div class="field is-horizontal">
            <div class="field-label is-normal">
                <label class="label">Brand</label>
            </div>
            <div class="field-body">
                <div class="field">
                    <input class="input" name="@nameof(IngredientModel.Brand)" type="text" placeholder="Beatrice" value="@Ingredient.Bind(q => q.Brand).Unwrap()" />
                </div>
            </div>
        </div>

        <div class="field is-horizontal">
            <div class="field-label is-normal">
                <label class="label">Vendor</label>
            </div>
            <div class="field-body">
                <div class="field">
                    <input class="input" name="@nameof(IngredientModel.Vendor)" type="text" placeholder="Superstore" value="@Ingredient.Bind(q => q.Vendor).Unwrap()" />
                </div>
            </div>
        </div>

        <hr />

        <div class="field is-horizontal">
            <div class="field-label is-normal">
                <label class="label">Serving size</label>
            </div>
            <div class="field-body">
                <div class="field has-addons">
                    <div class="control"><input class="input" name="@nameof(IngredientModel.ServingSizeQuantity)" type="number" placeholder="250" value="@Ingredient.Bind(q => q.ServingSizeQuantity).Unwrap()"></div>
                    <div class="control"><input class="input unit-input" name="@nameof(IngredientModel.ServingSizeUnit)" type="text" placeholder="mL" value="@Ingredient.Bind(q => q.ServingSizeUnit).Unwrap()"></div>
                </div>
            </div>
        </div>

        <div class="field is-horizontal">
            <div class="field-label is-normal">
                <label class="label">Calories</label>
            </div>
            <div class="field-body">
                <div class="field has-addons">
                    <div class="control"><input class="input" name="@nameof(IngredientModel.Calories)" type="number" placeholder="160" value="@Ingredient.Bind(q => q.Calories).Unwrap()"></div>
                </div>
            </div>
        </div>

        <div class="field is-horizontal">
            <div class="field-label is-normal">
                <label class="label">Fat</label>
            </div>
            <div class="field-body">
                <div class="field has-addons">
                    <div class="control"><input class="input" name="@nameof(IngredientModel.FatGrams)" type="number" placeholder="8" value="@Ingredient.Bind(q => q.FatGrams).Unwrap()"></div>
                    <div class="control"><p class="button is-static">g</p></div>
                </div>
            </div>
        </div>

        <div class="field is-horizontal">
            <div class="field-label is-normal">
                <label class="label">Carbs</label>
            </div>
            <div class="field-body">
                <div class="field has-addons">
                    <div class="control"><input class="input" name="@nameof(IngredientModel.CarbGrams)" type="number" placeholder="12" value="@Ingredient.Bind(q => q.CarbGrams).Unwrap()"></div>
                    <div class="control"><p class="button is-static">g</p></div>
                </div>
            </div>
        </div>

        <div class="field is-horizontal">
            <div class="field-label is-normal">
                <label class="label">Protein</label>
            </div>
            <div class="field-body">
                <div class="field has-addons">
                    <div class="control"><input class="input" name="@nameof(IngredientModel.ProteinGrams)" type="number" placeholder="9" value="@Ingredient.Bind(q => q.ProteinGrams).Unwrap()"></div>
                    <div class="control"><p class="button is-static">g</p></div>
                </div>
            </div>
        </div>

        <hr />

        <div class="field is-horizontal">
            <div class="field-label is-normal">
                <label class="label">Package size</label>
            </div>
            <div class="field-body">
                <div class="field has-addons">
                    <div class="control"><input class="input" name="@nameof(IngredientModel.PackageSizeQuantity)" type="number" placeholder="4" value="@Ingredient.Bind(q => q.PackageSizeQuantity).Unwrap()"></div>
                    <div class="control"><input class="input unit-input" name="@nameof(IngredientModel.PackageSizeUnit)" type="text" placeholder="L" value="@Ingredient.Bind(q => q.PackageSizeUnit).Unwrap()"></div>
                </div>
            </div>
        </div>

        <div class="field is-horizontal">
            <div class="field-label is-normal">
                <label class="label">Package price</label>
            </div>
            <div class="field-body">
                <div class="field has-addons">
                    <div class="control"><input class="input" name="@nameof(IngredientModel.PackageCostDollars)" type="number" placeholder="5.25" value="@Ingredient.Bind(q => q.PackageCostDollars).Unwrap()"></div>
                    <div class="control"><p class="button is-static">$</p></div>
                </div>
            </div>
        </div>

        <hr />

        <div class="field is-horizontal">
            <div class="field-label is-normal">
                <label class="label">Notes</label>
            </div>
            <div class="field-body">
                <div class="field">
                    <textarea class="textarea" name="@nameof(IngredientModel.Notes)" type="text" value="@Ingredient.As(q => q.Notes).Unwrap()" />
                </div>
            </div>
        </div>


    </form>
        <div class="field is-horizontal mt-5">
            <div class="field-label is-normal"></div>
            <div class="field-body">
                <div class="field">
                    <div class="control buttons">
                        <button
                            class="button is-primary"
                            hx-include="#edit-ingredient-form"
                            hx-swap="none" hx-post="@_target"
                        >
                            Save
                        </button>
                        <button
                            class="button is-primary"
                            hx-include="#edit-ingredient-form"
                            hx-swap="none" hx-post="@_target"
                            hx-vals='{"createAnother": "true"}'
                        >
                            Save & create another
                        </button>
                    </div>
                </div>
            </div>
        </div>

</div>
