@using Hestia.Core.Models
@using Hestia.Domain.Models
@using Hestia.UI.Core.Components
@attribute [RenderPage]

<div _="on load send OnNavigate(value:'NoNavigation') to #navbar then remove me"></div>

@code {
    [Parameter, EditorRequired]
    public required RecipeModel Recipe { get; set; }

    [Parameter, EditorRequired]
    public required int RecipeId { get; set; }
}

<div class="content-container mt-5">
    <div class="page-header">
        <p>@Recipe.Title</p>
    </div>

    <div class="columns is-8">
        <div class="column is-one-quarter">
                    <div class="content">
                        <div class="fixed-grid has-2-cols">
                            <div class="grid">

                                @if (Recipe.PrepTimeQuantity.HasValue && Recipe.PrepTimeUnit.HasValue)
                                {
                                    <div class="cell"><p class="section-label">Prep Time</p></div>
                                    <div class="cell"><p>@Recipe.PrepTimeQuantity.Value.ToString("0.##") @Recipe.PrepTimeUnit.Value.ToString().ToLower()</p></div>
                                }
                                @if (Recipe.CookTimeQuantity.HasValue && Recipe.CookTimeUnit.HasValue)
                                {
                                    <div class="cell"><p class="section-label">Cook Time</p></div>
                                    <div class="cell"><p>@Recipe.CookTimeQuantity.Value.ToString("0.##") @Recipe.CookTimeUnit.Value.ToString().ToLower()</p></div>
                                }
                                @if (Recipe.YieldQuantity.HasValue && Recipe.YieldUnit.HasValue)
                                {
                                    <div class="cell"><p class="section-label">Yield</p></div>
                                    <div class="cell"><p>@Recipe.YieldQuantity.Value.ToString("0.##") @Recipe.YieldUnit.Value</p></div>
                                }
                                @if (Recipe.NumberOfServings.HasValue)
                                {
                                    <div class="cell"><p class="section-label">Servings</p></div>
                                    <div class="cell"><p>@Recipe.NumberOfServings.Value.ToString("0.##")</p></div>
                                }
                            </div>
                        </div>
                    </div>
                    <hr />

                    <div class="content">
                            @if (Recipe.Ingredients.Any(i => !i.IngredientId.HasValue))
                            {
                                    <Tooltip
                                        MaxWidth="250"
                                        Position="Tooltip.TooltipPosition.RightStart" >
                                        <TriggerContent>
                                            <div class="is-flex is-align-items-center mb-3">
                                                <span class="icon">
                                                    <LucideIcon CssClass="has-text-grey" Name="info" Size="20" />
                                                </span>
                                            </div>
                                        </TriggerContent>
                                        <TooltipContent>
                                            <div class="card p-3 content">
                                                <p>
                                                    Any ingredients marked with a <span class="icon"><LucideIcon Name="asterisk" Size="20" CssClass="has-text-info" /></span> have been orphaned from their referenced ingredients. Edit and save the recipe to recreate the references.
                                                </p>
                                            </div>
                                        </TooltipContent>
                                    </Tooltip>
                            }
                        @if (Recipe.Ingredients.Count != 0)
                        {
                            <div class="is-flex is-flex-direction-column is-gap-1">
                                @foreach (var ingredient in Recipe.Ingredients)
                                {
                                    <div>
                                        <div class="is-flex is-align-items-center">
                                            @if (ingredient.Quantity.HasValue)
                                            {
                                                <span class="mr-2">@ingredient.Quantity.Value.ToString("0.##")</span>
                                            }
                                            @if (ingredient.Unit.HasValue)
                                            {
                                                <span class="mr-2">@ingredient.Unit.Value</span>
                                            }
                                            @if (ingredient.IngredientId.HasValue)
                                            {
                                                <a href="/ingredients/view/@ingredient.IngredientId.Value" 
                                                    hx-boost="true"
                                                    hx-target="#page-container"
                                                    hx-push-url="true"
                                                    class="has-text-link">
                                                    @ingredient.IngredientName.Or(ingredient.Name)
                                                </a>
                                            }
                                            else
                                            {
                                                <span>@ingredient.IngredientName.Or(ingredient.Name)</span>
                                            }
                                            @if (!ingredient.IngredientId.HasValue)
                                            {
                                                <span class="icon ml-1">
                                                    <LucideIcon CssClass="has-text-info" Name="asterisk" Size="16" />
                                                </span>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        }
            </div>
        </div>

        <div class="column">
            <div class="is-flex is-flex-direction-column is-gap-3">
                @if (Recipe.Description.HasValue)
                {
                    <div class="content">
                        <em>@Recipe.Description.Value</em>
                    </div>
                }

                @if (Recipe.Instructions.HasValue && !string.IsNullOrWhiteSpace(Recipe.Instructions.Value))
                {
                    <div class="content">
                        @((MarkupString)Recipe.Instructions.Value)
                    </div>
                }
            </div>

            <div class="field is-grouped mt-4">
                <div class="control">
                    <a href="/recipes/edit/@RecipeId" 
                       hx-get="/recipes/edit/@RecipeId"
                       hx-target="#page-container"
                       hx-push-url="/recipes/edit/@RecipeId"
                       class="button is-primary">
                        Edit Recipe
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>
