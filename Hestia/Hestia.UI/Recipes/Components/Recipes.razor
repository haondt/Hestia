@using Hestia.Core.Constants
@using Hestia.Domain.Models
@using Hestia.Domain.Services
@using Hestia.UI.Library.Components.Components
@using Hestia.UI.Core.Components
@attribute [RenderPage]
@inject IRecipesService RecipesService

@code {
    private List<(int Id, RecipeModel Recipe)> _recipes = new();

    protected override async Task OnInitializedAsync()
    {
        _recipes = await RecipesService.GetRecipesAsync(pageSize: HestiaConstants.PageSize);
    }
}

<div _="on load send OnNavigate(value:'Recipes') to #navbar then remove me"></div>

<div class="content-container mt-5">
    <div class="field is-grouped">
        <div class="control is-expanded">
            <form hx-get="/recipes/search" hx-target="#recipes-grid" hx-swap="innerHTML">
                <p class="control has-icons-left">
                    <input
                        _="
                            on input debounced at 200ms
                            send submit to the closest <form />
                        "
                        class="input is-fullwidth is-rounded" 
                        name="search" 
                        placeholder="search" 
                        type="search"
                        value="" />
                    <span class="icon is-small is-left"><LucideIcon Name="search" /></span>
                </p>
            </form>
        </div>
        <div class="control buttons">
            <div class="dropdown is-right">
                <div class="dropdown-trigger">
                    <a 
                        href="/recipes/new"
                        class="button is-primary"
                        hx-boost="true"
                        hx-target="#page-container"
                    >
                        New recipe
                    </a>
                </div>
            </div>
        </div>
    </div>

    <RecipesGrid
        NextPage="@(_recipes.Count == HestiaConstants.PageSize ? 1 : new Optional<int>())"
        Recipes="_recipes" />

</div>

