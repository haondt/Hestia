@using Hestia.Domain.Models
@using Hestia.Domain.Services
@using Hestia.Persistence.Models
@inject IUnitConversionsService UnitConversionsService
@code {
    [Parameter, EditorRequired]
    public required MealPlanItemModel Entity { get; set; }

    [Parameter, EditorRequired]
    public required int Id { get; set; }

    [Parameter]
    public bool EmitDirtyOnLoad { get; set; } = true;

    private string _id = Guid.NewGuid().ToString("N");
    private string _fieldPrefix = $"{nameof(MealPlanModel.Sections)}[#].{nameof(MealPlanSectionModel.Items)}[#]";


    private Dictionary<string, object> _containerAttributes = [];
    protected override void OnInitialized()
    {
        if (EmitDirtyOnLoad)
            _containerAttributes["_"] = "on load send dirty";
        
        base.OnInitialized();
    }
}

<div class="meal-plan-item" data-meal-plan-item-id="@_id" @attributes="_containerAttributes">
            <input
                name="@_fieldPrefix.@(nameof(MealPlanItemModel.ItemType))"
                type="hidden"
                form="meal-planner-form"
                value="@Entity.ItemType"/>
            <input
                name="@_fieldPrefix.@(nameof(MealPlanItemModel.RecipeOrIngredientId))"
                type="hidden"
                form="meal-planner-form"
                value="@Id"/>
            <input
                name="@_fieldPrefix.@nameof(MealPlanItemModel.ItemName)"
                type="hidden"
                form="meal-planner-form"
                value="@Entity.ItemName" />
            <input
                name="@_fieldPrefix.@nameof(MealPlanItemModel.Quantity)"
                type="hidden"
                form="meal-planner-form"
                value="@Entity.Quantity" />
            <input
                name="@_fieldPrefix.@nameof(MealPlanItemModel.Unit)"
                type="hidden"
                form="meal-planner-form"
                value="@Entity.Unit.Unwrap()" />

            <form>
                <input
                    name="itemType"
                    type="hidden"
                    value="@Entity.ItemType"/>
                <input
                    name="itemId"
                    type="hidden"
                    value="@Entity.RecipeOrIngredientId"/>
                <input
                    name="itemName"
                    type="hidden"
                    value="@Entity.ItemName" />
                <input
                    name="itemQuantity"
                    type="hidden"
                    value="@Entity.Quantity" />
                <input
                    name="itemUnit"
                    type="hidden"
                    value="@Entity.Unit.Unwrap()" />
            </form>
            <p
                hx-get="/meal-plans/fragments/item-configurator"
                hx-vals='js:{"targetItem":"@_id", "autoSelectUnit": false}'
                hx-include="previous form"
                hx-swap="none"
                class="meal-plan-item-name">
                <span class="mr-1">@Entity.ItemName</span>
                <span>
                    <span class="has-text-grey is-size-7 is-">@Entity.Quantity</span>
                    <span class="has-text-grey is-size-7 is-">@Entity.Unit.Unwrap()</span>
                </span>
            </p>
            <div class=" px-2 is-align-content-center has-border-top-weak has-border-bottom-weak has-border-right-weak has-text-danger is-clickable"
                _="on click send removeme(target: (the closest .meal-plan-item))"
            >
                Delete
            </div>
            <div
                class="drag-container is-flex is-align-items-center is-justify-content-center">
                <span class="drag-handle">
                </span>
            </div>
</div>



